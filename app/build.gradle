apply plugin: 'com.android.application'

android {
    compileSdkVersion 29
    defaultConfig {
        applicationId "com.example.administrator.WeChats"
        minSdkVersion 19
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.page01.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
//    implementation 'com.android.support:appcompat-v7:27.1.1'
//    implementation 'com.android.support:recyclerview-v7:27.1.1'
//    implementation 'com.android.support:design:27.1.1'

    implementation 'com.android.support.constraint:constraint-layout:2.0.1'
    //noinspection GradleCompatible
    implementation 'com.android.support:design:28.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.0'
    implementation 'androidx.annotation:annotation:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'com.google.android.gms:play-services-maps:17.0.0'
    implementation 'androidx.viewpager:viewpager:1.0.0'
    testImplementation 'junit:junit:4.12'
    implementation 'org.litepal.android:core:2.0.0'


    def nav_version = "2.3.1"

    // Java language implementation
    implementation "androidx.navigation:navigation-fragment:$nav_version"
    implementation "androidx.navigation:navigation-ui:$nav_version"
//        // Kotlin
//        implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
//        implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    // Feature module Support
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$nav_version"
    // Testing Navigation
    androidTestImplementation "androidx.navigation:navigation-testing:$nav_version"
}

task helloTask {
    println 'I Am Called !'
}

//计算build执行时长
//def startBuildTime,endBuildTime
//this.afterEvaluate { Project project ->
//    //保证要找的task已经配置完毕,注意：prebuild是在Android工程里面有
//    def preBuildTask = project.tasks.getByName('preBuild')
//    preBuildTask.doFirst {
//        startBuildTime = System.currentTimeMillis()
//        println 'the start time is ' + startBuildTime
//    }
//
//    def buildTask = project.tasks.getByName('build')
//    buildTask.doLast {
//        endBuildTime = System.currentTimeMillis()
//        println "the end time is ${endBuildTime - startBuildTime}"
//    }
//}

this.afterEvaluate {
    def manifestFile = "${projectDir}/src/main/AndroidManifest.xml"
    def manifest = file(manifestFile).getText()
    def xml = new XmlParser().parseText(manifest)
//    def xml = file(manifestFile)
//    def manifest = new XmlSlurper().parse(manifestFile)
    def application = xml.application

    application.activity.each {
        def isFind = false
        it.children().each{
            if(it.name()=="application" &&
                    it.@"android:icon" !=null){
                it.@"android:icon" = "@drawable/ic_sy"
                isFind = true
                return true
            }
        }

//        it.children().each {
//            if(it.name() == "application"){
//            }
//            if(isFind){
//                return  true
//            }
//        }

        if (isFind){
            it.@"android:name" = "New Activity"
            return true
        }
    }
//    xml.withWriter {out->
//        XmlUtil.serialize(manifest, out)
//    }
    def serialize = XmlUtil.serialize(xml)
    file(manifestPath).write(serialize)
}